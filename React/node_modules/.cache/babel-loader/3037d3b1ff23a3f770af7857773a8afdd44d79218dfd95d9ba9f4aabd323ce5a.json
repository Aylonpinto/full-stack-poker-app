{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import api from'./Api';import TotalBalance from'./components/TotalBalance';import GameForm from'./components/GameForm';import _ from'lodash';import SettleBalanceModal from'./components/SettleBalanceModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[games,setGames]=useState([]);const[gameName,setGameName]=useState('');const[playersData,setPlayersData]=useState([{name:'',start_balance:'',end_balance:''}]);const[balanceData,setBalanceData]=useState({});const[settleBalanceData,setSettleBalanceData]=useState([]);const fetchGames=async()=>{var _response$data;const response=await api.get('/games/');setGames((_response$data=response.data)!==null&&_response$data!==void 0?_response$data:[]);};const fetchBalanceData=async()=>{const response=await api.get('/players/');const data={};for(const player of response.data){data[player.player_name]=player.balance;}setBalanceData(data);};useEffect(()=>{fetchGames();fetchBalanceData();},[]);const handleDeleteGames=async event=>{event.preventDefault();const ids=games.map(g=>g.id);for(const id of ids){await api.delete(\"/games/\".concat(id));}fetchGames();};const handleFormSubmit=async event=>{event.preventDefault();const gameId=(games.length?_.maxBy(games,g=>g.id).id:0)+1;for(const player of playersData){var _$find;console.log(balanceData[player.name],player.name,balanceData);if(typeof balanceData[player.name]==='undefined'){await api.post('/players/',{player_name:player.name,balance:0});}// Fetch players and wait for the response before proceeding\nconst playersResponse=await api.get('/players/');const playerId=(_$find=_.find(playersResponse.data,p=>{return p.player_name===player.name;}))===null||_$find===void 0?void 0:_$find.id;const playerGameData={game_id:gameId,player_id:playerId!==null&&playerId!==void 0?playerId:0,start_balance:player.start_balance,end_balance:typeof player.end_balance==='number'?player.end_balance:0};await api.post('/player_games/',playerGameData);}await api.post('/games/',{game_name:gameName});// Use the updatedGames array\nfetchGames();fetchBalanceData();setGameName('');setPlayersData([{name:'',start_balance:'',end_balance:''}]);};const handleSettleBalance=async event=>{event.preventDefault();const transactions=await api.get('/settle_balance/');setSettleBalanceData(transactions.data);deletePlayers();};const deletePlayers=async()=>{const response=await api.get('/players/');const ids=response.data.map(p=>p.id);for(const id of ids){await api.delete(\"/players/\".concat(id));}fetchBalanceData();};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Poker Balance Tracker\"})}),/*#__PURE__*/_jsx(TotalBalance,{balanceData:balanceData,handleSettleBalance:handleSettleBalance}),/*#__PURE__*/_jsx(\"h2\",{children:\"Create Poker Game\"}),/*#__PURE__*/_jsx(GameForm,{gameName:gameName,setGameName:setGameName,playersData:playersData,setPlayersData:setPlayersData,handleSubmit:handleFormSubmit}),/*#__PURE__*/_jsx(SettleBalanceModal,{settleBalanceData:settleBalanceData})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","api","TotalBalance","GameForm","_","SettleBalanceModal","jsx","_jsx","jsxs","_jsxs","App","games","setGames","gameName","setGameName","playersData","setPlayersData","name","start_balance","end_balance","balanceData","setBalanceData","settleBalanceData","setSettleBalanceData","fetchGames","_response$data","response","get","data","fetchBalanceData","player","player_name","balance","handleDeleteGames","event","preventDefault","ids","map","g","id","delete","concat","handleFormSubmit","gameId","length","maxBy","_$find","console","log","post","playersResponse","playerId","find","p","playerGameData","game_id","player_id","game_name","handleSettleBalance","transactions","deletePlayers","className","children","handleSubmit"],"sources":["/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/src/App.tsx"],"sourcesContent":["import React, {useState , useEffect} from 'react'\nimport './App.css';\nimport api from './Api'\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport _ from 'lodash';\nimport SettleBalanceModal from './components/SettleBalanceModal';\n\n\n\nfunction App() {\n  const [games, setGames] = useState([])\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{name: '', start_balance: '', end_balance: ''}])\n  const [balanceData, setBalanceData] = useState({})\n  const [settleBalanceData, setSettleBalanceData] = useState([])\n\n\n  const fetchGames = async () => {\n    const response = await api.get('/games/')\n    setGames(response.data ?? [])\n  }\n\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/')\n    const data = {}\n    for (const player of response.data) {\n      data[player.player_name] = player.balance\n    }\n    setBalanceData(data)\n  }\n\n  useEffect(() => {\n    fetchGames()\n    fetchBalanceData()\n  }, [])\n\n  const handleDeleteGames = async (event) => {\n    event.preventDefault();\n    const ids = games.map(g => g.id);\n  \n    for (const id of ids) {\n      await api.delete(`/games/${id}`);\n    }\n  \n    fetchGames();\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();  \n    const gameId = (games.length ? _.maxBy(games, g => g.id).id : 0) + 1  \n    for (const player of playersData) {\n      console.log(balanceData[player.name], player.name, balanceData)\n      if (typeof balanceData[player.name] === 'undefined') {\n        await api.post('/players/', {player_name: player.name, balance: 0});\n      }\n  \n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = _.find(playersResponse.data, p => {\n        return p.player_name === player.name\n      })?.id;\n  \n      const playerGameData = {\n        game_id: gameId,\n        player_id: playerId ?? 0,\n        start_balance: player.start_balance,\n        end_balance: typeof player.end_balance === 'number' ? player.end_balance : 0\n      };  \n      await api.post('/player_games/', playerGameData);\n      \n    }\n    await api.post('/games/', {game_name: gameName});\n  \n    // Use the updatedGames array\n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{name: '', start_balance: '', end_balance: ''}]);\n  };\n\n  const handleSettleBalance = async (event) => {\n    event.preventDefault()\n    const transactions = await api.get('/settle_balance/')\n    setSettleBalanceData(transactions.data)\n    deletePlayers()\n  }\n  \n  const deletePlayers = async () => {\n    const response = await api.get('/players/')\n    const ids = response.data.map(p => p.id);\n  \n    for (const id of ids) {\n      await api.delete(`/players/${id}`);\n    }\n    fetchBalanceData()\n  }\n  \n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Poker Balance Tracker</h1>\n      </header>\n      <TotalBalance balanceData={balanceData} handleSettleBalance={handleSettleBalance}/>\n      <h2>Create Poker Game</h2>\n      <GameForm gameName={gameName} setGameName={setGameName} playersData={playersData} setPlayersData={setPlayersData} handleSubmit={handleFormSubmit}/>\n      <SettleBalanceModal settleBalanceData={settleBalanceData}/>\n    </div>  \n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAGC,SAAS,KAAO,OAAO,CACjD,MAAO,WAAW,CAClB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,CAAC,KAAM,QAAQ,CACtB,MAAO,CAAAC,kBAAkB,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIjE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CAACkB,IAAI,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAC,CAAC,CAAC,CAChG,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD,KAAM,CAACuB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAG9D,KAAM,CAAAyB,UAAU,CAAG,KAAAA,CAAA,GAAY,KAAAC,cAAA,CAC7B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAzB,GAAG,CAAC0B,GAAG,CAAC,SAAS,CAAC,CACzCf,QAAQ,EAAAa,cAAA,CAACC,QAAQ,CAACE,IAAI,UAAAH,cAAA,UAAAA,cAAA,CAAI,EAAE,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAI,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAzB,GAAG,CAAC0B,GAAG,CAAC,WAAW,CAAC,CAC3C,KAAM,CAAAC,IAAI,CAAG,CAAC,CAAC,CACf,IAAK,KAAM,CAAAE,MAAM,GAAI,CAAAJ,QAAQ,CAACE,IAAI,CAAE,CAClCA,IAAI,CAACE,MAAM,CAACC,WAAW,CAAC,CAAGD,MAAM,CAACE,OAAO,CAC3C,CACAX,cAAc,CAACO,IAAI,CAAC,CACtB,CAAC,CAED5B,SAAS,CAAC,IAAM,CACdwB,UAAU,CAAC,CAAC,CACZK,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,iBAAiB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACzCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAC,GAAG,CAAGzB,KAAK,CAAC0B,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,CAAC,CAEhC,IAAK,KAAM,CAAAA,EAAE,GAAI,CAAAH,GAAG,CAAE,CACpB,KAAM,CAAAnC,GAAG,CAACuC,MAAM,WAAAC,MAAA,CAAWF,EAAE,CAAE,CAAC,CAClC,CAEAf,UAAU,CAAC,CAAC,CACd,CAAC,CAED,KAAM,CAAAkB,gBAAgB,CAAG,KAAO,CAAAR,KAAK,EAAK,CACxCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAQ,MAAM,CAAG,CAAChC,KAAK,CAACiC,MAAM,CAAGxC,CAAC,CAACyC,KAAK,CAAClC,KAAK,CAAE2B,CAAC,EAAIA,CAAC,CAACC,EAAE,CAAC,CAACA,EAAE,CAAG,CAAC,EAAI,CAAC,CACpE,IAAK,KAAM,CAAAT,MAAM,GAAI,CAAAf,WAAW,CAAE,KAAA+B,MAAA,CAChCC,OAAO,CAACC,GAAG,CAAC5B,WAAW,CAACU,MAAM,CAACb,IAAI,CAAC,CAAEa,MAAM,CAACb,IAAI,CAAEG,WAAW,CAAC,CAC/D,GAAI,MAAO,CAAAA,WAAW,CAACU,MAAM,CAACb,IAAI,CAAC,GAAK,WAAW,CAAE,CACnD,KAAM,CAAAhB,GAAG,CAACgD,IAAI,CAAC,WAAW,CAAE,CAAClB,WAAW,CAAED,MAAM,CAACb,IAAI,CAAEe,OAAO,CAAE,CAAC,CAAC,CAAC,CACrE,CAEA;AACA,KAAM,CAAAkB,eAAe,CAAG,KAAM,CAAAjD,GAAG,CAAC0B,GAAG,CAAC,WAAW,CAAC,CAClD,KAAM,CAAAwB,QAAQ,EAAAL,MAAA,CAAG1C,CAAC,CAACgD,IAAI,CAACF,eAAe,CAACtB,IAAI,CAAEyB,CAAC,EAAI,CACjD,MAAO,CAAAA,CAAC,CAACtB,WAAW,GAAKD,MAAM,CAACb,IAAI,CACtC,CAAC,CAAC,UAAA6B,MAAA,iBAFeA,MAAA,CAEbP,EAAE,CAEN,KAAM,CAAAe,cAAc,CAAG,CACrBC,OAAO,CAAEZ,MAAM,CACfa,SAAS,CAAEL,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAI,CAAC,CACxBjC,aAAa,CAAEY,MAAM,CAACZ,aAAa,CACnCC,WAAW,CAAE,MAAO,CAAAW,MAAM,CAACX,WAAW,GAAK,QAAQ,CAAGW,MAAM,CAACX,WAAW,CAAG,CAC7E,CAAC,CACD,KAAM,CAAAlB,GAAG,CAACgD,IAAI,CAAC,gBAAgB,CAAEK,cAAc,CAAC,CAElD,CACA,KAAM,CAAArD,GAAG,CAACgD,IAAI,CAAC,SAAS,CAAE,CAACQ,SAAS,CAAE5C,QAAQ,CAAC,CAAC,CAEhD;AACAW,UAAU,CAAC,CAAC,CACZK,gBAAgB,CAAC,CAAC,CAClBf,WAAW,CAAC,EAAE,CAAC,CACfE,cAAc,CAAC,CAAC,CAACC,IAAI,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAC,CAAC,CAAC,CAClE,CAAC,CAED,KAAM,CAAAuC,mBAAmB,CAAG,KAAO,CAAAxB,KAAK,EAAK,CAC3CA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAwB,YAAY,CAAG,KAAM,CAAA1D,GAAG,CAAC0B,GAAG,CAAC,kBAAkB,CAAC,CACtDJ,oBAAoB,CAACoC,YAAY,CAAC/B,IAAI,CAAC,CACvCgC,aAAa,CAAC,CAAC,CACjB,CAAC,CAED,KAAM,CAAAA,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,KAAM,CAAAlC,QAAQ,CAAG,KAAM,CAAAzB,GAAG,CAAC0B,GAAG,CAAC,WAAW,CAAC,CAC3C,KAAM,CAAAS,GAAG,CAAGV,QAAQ,CAACE,IAAI,CAACS,GAAG,CAACgB,CAAC,EAAIA,CAAC,CAACd,EAAE,CAAC,CAExC,IAAK,KAAM,CAAAA,EAAE,GAAI,CAAAH,GAAG,CAAE,CACpB,KAAM,CAAAnC,GAAG,CAACuC,MAAM,aAAAC,MAAA,CAAaF,EAAE,CAAE,CAAC,CACpC,CACAV,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAID,mBACEpB,KAAA,QAAKoD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBvD,IAAA,WAAQsD,SAAS,CAAC,YAAY,CAAAC,QAAA,cAC9BvD,IAAA,OAAAuD,QAAA,CAAI,uBAAqB,CAAI,CAAC,CACtB,CAAC,cACTvD,IAAA,CAACL,YAAY,EAACkB,WAAW,CAAEA,WAAY,CAACsC,mBAAmB,CAAEA,mBAAoB,CAAC,CAAC,cACnFnD,IAAA,OAAAuD,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BvD,IAAA,CAACJ,QAAQ,EAACU,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAACC,WAAW,CAAEA,WAAY,CAACC,cAAc,CAAEA,cAAe,CAAC+C,YAAY,CAAErB,gBAAiB,CAAC,CAAC,cACnJnC,IAAA,CAACF,kBAAkB,EAACiB,iBAAiB,CAAEA,iBAAkB,CAAC,CAAC,EACxD,CAAC,CAEV,CAEA,cAAe,CAAAZ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}