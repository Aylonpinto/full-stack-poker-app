{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import api from'./Api';import{Button}from'@mui/joy';import TotalBalance from'./components/TotalBalance';import GameForm from'./components/GameForm';import _ from'lodash';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[games,setGames]=useState([]);const[gameName,setGameName]=useState('');const[playersData,setPlayersData]=useState([{name:'',start_balance:'',end_balance:''}]);const[balanceData,setBalanceData]=useState({});const fetchGames=async()=>{var _response$data;const response=await api.get('/games/');setGames((_response$data=response.data)!==null&&_response$data!==void 0?_response$data:[]);};const fetchBalanceData=async()=>{const response=await api.get('/players/');const data={};for(const player of response.data){data[player.player_name]=player.balance;}setBalanceData(data);};useEffect(()=>{fetchGames();fetchBalanceData();},[]);// const handleFormSubmit = async (event) => {\n//   event.preventDefault();\n//   await api.post('/games/', {game_name: gameName})\n//   const gameId = _.find(games, g => g.game_name === gameName)\n//   for (const player of playersData) {\n//     if (!balanceData[player.name]) {\n//       await api.post('/players/', {player_name: player.name, balance: 0})\n//     }\n//     const players = await api.get('/players/')\n//     const playerId = _.find(players, p => p.name === player.name).id\n//     const playerGameData = {\n//       game_id: gameId,\n//       player_id: playerId,\n//       start_balance: player.start_balance,\n//       end_balance: player.end_balance\n//     }\n//     await api.post('/player_games/', playerGameData)\n//   }\n//   fetchGames()\n//   fetchBalanceData()\n//   setGameName('')\n//   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n// }\nconst handleDeleteGames=async event=>{event.preventDefault();const ids=games.map(g=>g.id);for(const id of ids){await api.delete(\"/games/\".concat(id));}fetchGames();};const handleFormSubmit=async event=>{event.preventDefault();const gameId=(games.length?_.maxBy(games,g=>g.id).id:0)+1;for(const player of playersData){var _$find;if(!balanceData[player.name]){await api.post('/players/',{player_name:player.name,balance:0});}// Fetch players and wait for the response before proceeding\nconst playersResponse=await api.get('/players/');const playerId=(_$find=_.find(playersResponse.data,p=>{return p.player_name===player.name;}))===null||_$find===void 0?void 0:_$find.id;const playerGameData={game_id:gameId,player_id:playerId!==null&&playerId!==void 0?playerId:0,start_balance:player.start_balance,end_balance:player.end_balance};await api.post('/player_games/',playerGameData);}await api.post('/games/',{game_name:gameName});// Use the updatedGames array\nfetchGames();fetchBalanceData();setGameName('');setPlayersData([{name:'',start_balance:'',end_balance:''}]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Poker Balance Tracker\"})}),/*#__PURE__*/_jsx(TotalBalance,{balanceData:balanceData}),/*#__PURE__*/_jsx(\"h2\",{children:\"Create Poker Game\"}),/*#__PURE__*/_jsx(GameForm,{gameName:gameName,setGameName:setGameName,playersData:playersData,setPlayersData:setPlayersData,handleSubmit:handleFormSubmit}),/*#__PURE__*/_jsx(Button,{onClick:handleDeleteGames,children:\"Delete games\"})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","api","Button","TotalBalance","GameForm","_","jsx","_jsx","jsxs","_jsxs","App","games","setGames","gameName","setGameName","playersData","setPlayersData","name","start_balance","end_balance","balanceData","setBalanceData","fetchGames","_response$data","response","get","data","fetchBalanceData","player","player_name","balance","handleDeleteGames","event","preventDefault","ids","map","g","id","delete","concat","handleFormSubmit","gameId","length","maxBy","_$find","post","playersResponse","playerId","find","p","playerGameData","game_id","player_id","game_name","className","children","handleSubmit","onClick"],"sources":["/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/src/App.js"],"sourcesContent":["import React, {useState , useEffect} from 'react'\nimport './App.css';\nimport api from './Api'\nimport { Button } from '@mui/joy';\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport _ from 'lodash';\n\n\n\nfunction App() {\n  const [games, setGames] = useState([])\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{name: '', start_balance: '', end_balance: ''}])\n  const [balanceData, setBalanceData] = useState({})\n\n\n  const fetchGames = async () => {\n    const response = await api.get('/games/')\n    setGames(response.data ?? [])\n  }\n\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/')\n    const data = {}\n    for (const player of response.data) {\n      data[player.player_name] = player.balance\n    }\n    setBalanceData(data)\n  }\n\n  useEffect(() => {\n    fetchGames()\n    fetchBalanceData()\n  }, [])\n\n\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   await api.post('/games/', {game_name: gameName})\n    \n  //   const gameId = _.find(games, g => g.game_name === gameName)\n  //   for (const player of playersData) {\n  //     if (!balanceData[player.name]) {\n  //       await api.post('/players/', {player_name: player.name, balance: 0})\n  //     }\n  //     const players = await api.get('/players/')\n  //     const playerId = _.find(players, p => p.name === player.name).id\n  //     const playerGameData = {\n  //       game_id: gameId,\n  //       player_id: playerId,\n  //       start_balance: player.start_balance,\n  //       end_balance: player.end_balance\n  //     }\n  //     await api.post('/player_games/', playerGameData)\n  //   }\n  //   fetchGames()\n  //   fetchBalanceData()\n  //   setGameName('')\n  //   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n  // }\n\n  const handleDeleteGames = async (event) => {\n    event.preventDefault();\n    const ids = games.map(g => g.id);\n  \n    for (const id of ids) {\n      await api.delete(`/games/${id}`);\n    }\n  \n    fetchGames();\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();  \n    const gameId = (games.length ? _.maxBy(games, g => g.id).id : 0) + 1  \n    for (const player of playersData) {\n      if (!balanceData[player.name]) {\n        await api.post('/players/', {player_name: player.name, balance: 0});\n      }\n  \n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = _.find(playersResponse.data, p => {\n        return p.player_name === player.name\n      })?.id;\n  \n      const playerGameData = {\n        game_id: gameId,\n        player_id: playerId ?? 0,\n        start_balance: player.start_balance,\n        end_balance: player.end_balance\n      };  \n      await api.post('/player_games/', playerGameData);\n      \n    }\n    await api.post('/games/', {game_name: gameName});\n  \n    // Use the updatedGames array\n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{name: '', start_balance: '', end_balance: ''}]);\n  };\n  \n  \n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Poker Balance Tracker</h1>\n      </header>\n      <TotalBalance balanceData={balanceData}/>\n      <h2>Create Poker Game</h2>\n      <GameForm gameName={gameName} setGameName={setGameName} playersData={playersData} setPlayersData={setPlayersData} handleSubmit={handleFormSubmit}/>\n      <Button onClick={handleDeleteGames}>\n        Delete games\n      </Button>\n    </div>  \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}