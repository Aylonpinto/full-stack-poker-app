{"ast":null,"code":"var _jsxFileName = \"/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport api from './Api';\nimport { Button } from '@mui/joy';\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{\n    name: '',\n    start_balance: '',\n    end_balance: ''\n  }]);\n  const [balanceData, setBalanceData] = useState({});\n  const fetchGames = async () => {\n    var _response$data;\n    const response = await api.get('/games/');\n    setGames((_response$data = response.data) !== null && _response$data !== void 0 ? _response$data : []);\n  };\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/');\n    const data = {};\n    for (const player of response.data) {\n      data[player.player_name] = player.balance;\n    }\n    setBalanceData(data);\n  };\n  useEffect(() => {\n    fetchGames();\n    fetchBalanceData();\n  }, []);\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   await api.post('/games/', {game_name: gameName})\n\n  //   const gameId = _.find(games, g => g.game_name === gameName)\n  //   for (const player of playersData) {\n  //     if (!balanceData[player.name]) {\n  //       await api.post('/players/', {player_name: player.name, balance: 0})\n  //     }\n  //     const players = await api.get('/players/')\n  //     const playerId = _.find(players, p => p.name === player.name).id\n  //     const playerGameData = {\n  //       game_id: gameId,\n  //       player_id: playerId,\n  //       start_balance: player.start_balance,\n  //       end_balance: player.end_balance\n  //     }\n  //     await api.post('/player_games/', playerGameData)\n  //   }\n  //   fetchGames()\n  //   fetchBalanceData()\n  //   setGameName('')\n  //   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n  // }\n\n  const handleDeleteGames = async event => {\n    event.preventDefault();\n    const ids = games.map(g => g.id);\n    for (const id of ids) {\n      await api.delete(`/games/${id}`);\n    }\n    fetchGames();\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const gameId = (games.length ? _.maxBy(games, g => g.id).id : 0) + 1;\n    for (const player of playersData) {\n      var _$find;\n      console.log(balanceData[player.name], player.name, balanceData);\n      if (typeof balanceData[player.name] === 'undefined') {\n        await api.post('/players/', {\n          player_name: player.name,\n          balance: 0\n        });\n      }\n\n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = (_$find = _.find(playersResponse.data, p => {\n        return p.player_name === player.name;\n      })) === null || _$find === void 0 ? void 0 : _$find.id;\n      const playerGameData = {\n        game_id: gameId,\n        player_id: playerId !== null && playerId !== void 0 ? playerId : 0,\n        start_balance: player.start_balance,\n        end_balance: player.end_balance\n      };\n      await api.post('/player_games/', playerGameData);\n    }\n    await api.post('/games/', {\n      game_name: gameName\n    });\n\n    // Use the updatedGames array\n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{\n      name: '',\n      start_balance: '',\n      end_balance: ''\n    }]);\n  };\n  const handleSettleBalance = async event => {\n    event.preventDefault();\n    const transactions = await api.get('/settle_balance/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poker Balance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalBalance, {\n      balanceData: balanceData,\n      handleSettleBalance: handleSettleBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Poker Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameForm, {\n      gameName: gameName,\n      setGameName: setGameName,\n      playersData: playersData,\n      setPlayersData: setPlayersData,\n      handleSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xdvv60PLVQZdOBfMSIi5MO4FP14=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","api","Button","TotalBalance","GameForm","_","jsxDEV","_jsxDEV","App","_s","games","setGames","gameName","setGameName","playersData","setPlayersData","name","start_balance","end_balance","balanceData","setBalanceData","fetchGames","_response$data","response","get","data","fetchBalanceData","player","player_name","balance","handleDeleteGames","event","preventDefault","ids","map","g","id","delete","handleFormSubmit","gameId","length","maxBy","_$find","console","log","post","playersResponse","playerId","find","p","playerGameData","game_id","player_id","game_name","handleSettleBalance","transactions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","_c","$RefreshReg$"],"sources":["/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/src/App.js"],"sourcesContent":["import React, {useState , useEffect} from 'react'\nimport './App.css';\nimport api from './Api'\nimport { Button } from '@mui/joy';\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport _ from 'lodash';\n\n\n\nfunction App() {\n  const [games, setGames] = useState([])\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{name: '', start_balance: '', end_balance: ''}])\n  const [balanceData, setBalanceData] = useState({})\n\n\n  const fetchGames = async () => {\n    const response = await api.get('/games/')\n    setGames(response.data ?? [])\n  }\n\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/')\n    const data = {}\n    for (const player of response.data) {\n      data[player.player_name] = player.balance\n    }\n    setBalanceData(data)\n  }\n\n  useEffect(() => {\n    fetchGames()\n    fetchBalanceData()\n  }, [])\n\n\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   await api.post('/games/', {game_name: gameName})\n    \n  //   const gameId = _.find(games, g => g.game_name === gameName)\n  //   for (const player of playersData) {\n  //     if (!balanceData[player.name]) {\n  //       await api.post('/players/', {player_name: player.name, balance: 0})\n  //     }\n  //     const players = await api.get('/players/')\n  //     const playerId = _.find(players, p => p.name === player.name).id\n  //     const playerGameData = {\n  //       game_id: gameId,\n  //       player_id: playerId,\n  //       start_balance: player.start_balance,\n  //       end_balance: player.end_balance\n  //     }\n  //     await api.post('/player_games/', playerGameData)\n  //   }\n  //   fetchGames()\n  //   fetchBalanceData()\n  //   setGameName('')\n  //   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n  // }\n\n  const handleDeleteGames = async (event) => {\n    event.preventDefault();\n    const ids = games.map(g => g.id);\n  \n    for (const id of ids) {\n      await api.delete(`/games/${id}`);\n    }\n  \n    fetchGames();\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();  \n    const gameId = (games.length ? _.maxBy(games, g => g.id).id : 0) + 1  \n    for (const player of playersData) {\n      console.log(balanceData[player.name], player.name, balanceData)\n      if (typeof balanceData[player.name] === 'undefined') {\n        await api.post('/players/', {player_name: player.name, balance: 0});\n      }\n  \n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = _.find(playersResponse.data, p => {\n        return p.player_name === player.name\n      })?.id;\n  \n      const playerGameData = {\n        game_id: gameId,\n        player_id: playerId ?? 0,\n        start_balance: player.start_balance,\n        end_balance: player.end_balance\n      };  \n      await api.post('/player_games/', playerGameData);\n      \n    }\n    await api.post('/games/', {game_name: gameName});\n  \n    // Use the updatedGames array\n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{name: '', start_balance: '', end_balance: ''}]);\n  };\n\n  const handleSettleBalance = async (event) => {\n    event.preventDefault()\n    const transactions = await api.get('/settle_balance/')\n\n  }\n  \n  \n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Poker Balance Tracker</h1>\n      </header>\n      <TotalBalance balanceData={balanceData} handleSettleBalance={handleSettleBalance}/>\n      <h2>Create Poker Game</h2>\n      <GameForm gameName={gameName} setGameName={setGameName} playersData={playersData} setPlayersData={setPlayersData} handleSubmit={handleFormSubmit}/>\n    </div>  \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}