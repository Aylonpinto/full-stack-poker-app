{"ast":null,"code":"var _jsxFileName = \"/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/poker-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport api from './Api';\nimport PokerForm from './components/PokerForm';\nimport { Container } from '@mui/material';\nimport { Button } from '@mui/joy';\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport { lodash as _ } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [games, setGames] = useState([]);\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{\n    name: '',\n    start_balance: '',\n    end_balance: ''\n  }]);\n  const [balanceData, setBalanceData] = useState({});\n  const fetchGames = async () => {\n    var _response$data;\n    const response = await api.get('/games/');\n    setGames((_response$data = response.data) !== null && _response$data !== void 0 ? _response$data : []);\n  };\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/');\n    const data = {};\n    for (const player of response.data) {\n      data[player.player_name] = player.balance;\n    }\n    setBalanceData(data);\n  };\n  useEffect(() => {\n    fetchGames();\n    fetchBalanceData();\n  }, []);\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   await api.post('/games/', {game_name: gameName})\n\n  //   const gameId = _.find(games, g => g.game_name === gameName)\n  //   for (const player of playersData) {\n  //     if (!balanceData[player.name]) {\n  //       await api.post('/players/', {player_name: player.name, balance: 0})\n  //     }\n  //     const players = await api.get('/players/')\n  //     const playerId = _.find(players, p => p.name === player.name).id\n  //     const playerGameData = {\n  //       game_id: gameId,\n  //       player_id: playerId,\n  //       start_balance: player.start_balance,\n  //       end_balance: player.end_balance\n  //     }\n  //     await api.post('/player_games/', playerGameData)\n  //   }\n  //   fetchGames()\n  //   fetchBalanceData()\n  //   setGameName('')\n  //   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n  // }\n\n  // const handleDeleteGames = async (event) => {\n  //   event.preventDefault();\n  //   const ids = games.map(g => g.id);\n\n  //   for (const id of ids) {\n  //     await api.delete(`/games/${id}`);\n  //   }\n\n  //   fetchGames();\n  // };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    await api.post('/games/', {\n      game_name: gameName\n    });\n\n    // Fetch games and wait for the response before proceeding\n    const gamesResponse = await api.get('/games/');\n    const gameId = _.find(gamesResponse.data, g => g.game_name === gameName);\n    for (const player of playersData) {\n      if (!balanceData[player.name]) {\n        await api.post('/players/', {\n          player_name: player.name,\n          balance: 0\n        });\n      }\n\n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = _.find(playersResponse.data, p => p.name === player.name).id;\n      const playerGameData = {\n        game_id: gameId.id,\n        // Assuming gameId is an object with an 'id' property\n        player_id: playerId,\n        start_balance: player.start_balance,\n        end_balance: player.end_balance\n      };\n      await api.post('/player_games/', playerGameData);\n    }\n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{\n      name: '',\n      start_balance: '',\n      end_balance: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Poker Balance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalBalance, {\n      balanceData: balanceData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Poker Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameForm, {\n      gameName: gameName,\n      setGameName: setGameName,\n      playersData: playersData,\n      setPlayersData: setPlayersData,\n      handleSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleDeleteGames,\n      children: \"Delete games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xdvv60PLVQZdOBfMSIi5MO4FP14=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","api","PokerForm","Container","Button","TotalBalance","GameForm","lodash","_","jsxDEV","_jsxDEV","App","_s","games","setGames","gameName","setGameName","playersData","setPlayersData","name","start_balance","end_balance","balanceData","setBalanceData","fetchGames","_response$data","response","get","data","fetchBalanceData","player","player_name","balance","handleFormSubmit","event","preventDefault","post","game_name","gamesResponse","gameId","find","g","playersResponse","playerId","p","id","playerGameData","game_id","player_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","onClick","handleDeleteGames","_c","$RefreshReg$"],"sources":["/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/poker-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, {useState , useEffect} from 'react'\nimport './App.css';\nimport api from './Api'\nimport PokerForm from './components/PokerForm';\nimport { Container } from '@mui/material';\nimport { Button } from '@mui/joy';\nimport TotalBalance from './components/TotalBalance';\nimport GameForm from './components/GameForm';\nimport { lodash as _ } from 'lodash';\n\n\n\nfunction App() {\n  const [games, setGames] = useState([])\n  const [gameName, setGameName] = useState('');\n  const [playersData, setPlayersData] = useState([{name: '', start_balance: '', end_balance: ''}])\n  const [balanceData, setBalanceData] = useState({})\n\n\n  const fetchGames = async () => {\n    const response = await api.get('/games/')\n    setGames(response.data ?? [])\n  }\n\n  const fetchBalanceData = async () => {\n    const response = await api.get('/players/')\n    const data = {}\n    for (const player of response.data) {\n      data[player.player_name] = player.balance\n    }\n    setBalanceData(data)\n  }\n\n  useEffect(() => {\n    fetchGames()\n    fetchBalanceData()\n  }, [])\n\n\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   await api.post('/games/', {game_name: gameName})\n    \n  //   const gameId = _.find(games, g => g.game_name === gameName)\n  //   for (const player of playersData) {\n  //     if (!balanceData[player.name]) {\n  //       await api.post('/players/', {player_name: player.name, balance: 0})\n  //     }\n  //     const players = await api.get('/players/')\n  //     const playerId = _.find(players, p => p.name === player.name).id\n  //     const playerGameData = {\n  //       game_id: gameId,\n  //       player_id: playerId,\n  //       start_balance: player.start_balance,\n  //       end_balance: player.end_balance\n  //     }\n  //     await api.post('/player_games/', playerGameData)\n  //   }\n  //   fetchGames()\n  //   fetchBalanceData()\n  //   setGameName('')\n  //   setPlayersData([{name: '', start_balance: '', end_balance: ''}])\n  // }\n\n  // const handleDeleteGames = async (event) => {\n  //   event.preventDefault();\n  //   const ids = games.map(g => g.id);\n  \n  //   for (const id of ids) {\n  //     await api.delete(`/games/${id}`);\n  //   }\n  \n  //   fetchGames();\n  // };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    await api.post('/games/', {game_name: gameName});\n  \n    // Fetch games and wait for the response before proceeding\n    const gamesResponse = await api.get('/games/');\n    const gameId = _.find(gamesResponse.data, g => g.game_name === gameName);\n  \n    for (const player of playersData) {\n      if (!balanceData[player.name]) {\n        await api.post('/players/', {player_name: player.name, balance: 0});\n      }\n  \n      // Fetch players and wait for the response before proceeding\n      const playersResponse = await api.get('/players/');\n      const playerId = _.find(playersResponse.data, p => p.name === player.name).id;\n  \n      const playerGameData = {\n        game_id: gameId.id,  // Assuming gameId is an object with an 'id' property\n        player_id: playerId,\n        start_balance: player.start_balance,\n        end_balance: player.end_balance\n      };\n  \n      await api.post('/player_games/', playerGameData);\n    }\n  \n    fetchGames();\n    fetchBalanceData();\n    setGameName('');\n    setPlayersData([{name: '', start_balance: '', end_balance: ''}]);\n  };\n  \n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Poker Balance Tracker</h1>\n      </header>\n      <TotalBalance balanceData={balanceData}/>\n      <h2>Create Poker Game</h2>\n      <GameForm gameName={gameName} setGameName={setGameName} playersData={playersData} setPlayersData={setPlayersData} handleSubmit={handleFormSubmit}/>\n      <Button onClick={handleDeleteGames}>\n        Delete games\n      </Button>\n    </div>  \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}