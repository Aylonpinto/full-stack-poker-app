{"ast":null,"code":"import React,{useState}from'react';import Button from'@mui/joy/Button';import FormControl from'@mui/joy/FormControl';import FormLabel from'@mui/joy/FormLabel';import Input from'@mui/joy/Input';import Modal from'@mui/joy/Modal';import ModalDialog from'@mui/joy/ModalDialog';import DialogTitle from'@mui/joy/DialogTitle';import DialogContent from'@mui/joy/DialogContent';import Stack from'@mui/joy/Stack';import Add from'@mui/icons-material/Add';import PlayerBalance from'./PlayerBalance';import GameName from'./GameName';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function GameForm(_ref){let{handleSubmit,gameName,setGameName,playersData,setPlayersData}=_ref;const[open,setOpen]=useState(false);return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"neutral\",startDecorator:/*#__PURE__*/_jsx(Add,{}),onClick:()=>setOpen(true),children:\"New Game\"}),/*#__PURE__*/_jsx(Modal,{open:open,onClose:()=>setOpen(false),children:/*#__PURE__*/_jsxs(ModalDialog,{children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create new game\"}),/*#__PURE__*/_jsx(DialogContent,{children:\"Fill in the name, start and end balance of the players\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:event=>{handleSubmit(event);setOpen(false);},children:/*#__PURE__*/_jsxs(Stack,{spacing:3,children:[/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(PlayerBalance,{playersData:playersData,setPlayersData:setPlayersData})}),/*#__PURE__*/_jsx(GameName,{gameName:gameName,setGameName:setGameName}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"soft\",color:\"primary\",children:\"Add game\"})]})})]})})]});}","map":{"version":3,"names":["React","useState","Button","FormControl","FormLabel","Input","Modal","ModalDialog","DialogTitle","DialogContent","Stack","Add","PlayerBalance","GameName","jsx","_jsx","jsxs","_jsxs","GameForm","_ref","handleSubmit","gameName","setGameName","playersData","setPlayersData","open","setOpen","Fragment","children","variant","color","startDecorator","onClick","onClose","onSubmit","event","spacing","type"],"sources":["/Users/aylonpintoqt/Documents/own_projects/full-stack-poker-app/React/src/components/GameForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/joy/Button';\nimport FormControl from '@mui/joy/FormControl';\nimport FormLabel from '@mui/joy/FormLabel';\nimport Input from '@mui/joy/Input';\nimport Modal from '@mui/joy/Modal';\nimport ModalDialog from '@mui/joy/ModalDialog';\nimport DialogTitle from '@mui/joy/DialogTitle';\nimport DialogContent from '@mui/joy/DialogContent';\nimport Stack from '@mui/joy/Stack';\nimport Add from '@mui/icons-material/Add';\nimport PlayerBalance from './PlayerBalance';\nimport GameName from './GameName';\n\n\n\nexport default function GameForm({handleSubmit, gameName, setGameName, playersData, setPlayersData}) {\n  const [open, setOpen] = useState(false);\n\n\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        color=\"neutral\"\n        startDecorator={<Add />}\n        onClick={() => setOpen(true)}\n      >\n        New Game\n      </Button>\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <ModalDialog>\n          <DialogTitle>Create new game</DialogTitle>\n          <DialogContent>Fill in the name, start and end balance of the players</DialogContent>\n          <form\n            onSubmit={(event) => {\n              handleSubmit(event)\n              setOpen(false);\n            }}\n          >\n            <Stack spacing={3}>\n              <FormControl>\n               <PlayerBalance playersData={playersData} setPlayersData={setPlayersData}/>\n              </FormControl>\n              <GameName gameName={gameName} setGameName={setGameName}/>\n              <Button type='submit' variant=\"soft\" color=\"primary\">\n               Add game\n              </Button>\n            </Stack>\n          </form>\n        </ModalDialog>\n      </Modal>\n    </React.Fragment>\n  );\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,aAAa,KAAM,wBAAwB,CAClD,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,GAAG,KAAM,yBAAyB,CACzC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAIlC,cAAe,SAAS,CAAAC,QAAQA,CAAAC,IAAA,CAAqE,IAApE,CAACC,YAAY,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,CAAEC,cAAc,CAAC,CAAAL,IAAA,CACjG,KAAM,CAACM,IAAI,CAAEC,OAAO,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAIvC,mBACEgB,KAAA,CAACjB,KAAK,CAAC2B,QAAQ,EAAAC,QAAA,eACbb,IAAA,CAACb,MAAM,EACL2B,OAAO,CAAC,UAAU,CAClBC,KAAK,CAAC,SAAS,CACfC,cAAc,cAAEhB,IAAA,CAACJ,GAAG,GAAE,CAAE,CACxBqB,OAAO,CAAEA,CAAA,GAAMN,OAAO,CAAC,IAAI,CAAE,CAAAE,QAAA,CAC9B,UAED,CAAQ,CAAC,cACTb,IAAA,CAACT,KAAK,EAACmB,IAAI,CAAEA,IAAK,CAACQ,OAAO,CAAEA,CAAA,GAAMP,OAAO,CAAC,KAAK,CAAE,CAAAE,QAAA,cAC/CX,KAAA,CAACV,WAAW,EAAAqB,QAAA,eACVb,IAAA,CAACP,WAAW,EAAAoB,QAAA,CAAC,iBAAe,CAAa,CAAC,cAC1Cb,IAAA,CAACN,aAAa,EAAAmB,QAAA,CAAC,wDAAsD,CAAe,CAAC,cACrFb,IAAA,SACEmB,QAAQ,CAAGC,KAAK,EAAK,CACnBf,YAAY,CAACe,KAAK,CAAC,CACnBT,OAAO,CAAC,KAAK,CAAC,CAChB,CAAE,CAAAE,QAAA,cAEFX,KAAA,CAACP,KAAK,EAAC0B,OAAO,CAAE,CAAE,CAAAR,QAAA,eAChBb,IAAA,CAACZ,WAAW,EAAAyB,QAAA,cACXb,IAAA,CAACH,aAAa,EAACW,WAAW,CAAEA,WAAY,CAACC,cAAc,CAAEA,cAAe,CAAC,CAAC,CAC9D,CAAC,cACdT,IAAA,CAACF,QAAQ,EAACQ,QAAQ,CAAEA,QAAS,CAACC,WAAW,CAAEA,WAAY,CAAC,CAAC,cACzDP,IAAA,CAACb,MAAM,EAACmC,IAAI,CAAC,QAAQ,CAACR,OAAO,CAAC,MAAM,CAACC,KAAK,CAAC,SAAS,CAAAF,QAAA,CAAC,UAErD,CAAQ,CAAC,EACJ,CAAC,CACJ,CAAC,EACI,CAAC,CACT,CAAC,EACM,CAAC,CAErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}